= ROpenLaszlo: Interface to the OpenLaszlo compiler

ROpenLaszo is a Ruby interface to the OpenLaszlo[openlaszlo.org] compiler.  It allows you to compile Open<tt></tt>Laszlo programs from within Ruby, in order to integrate Open<tt></tt>Laszlo development into Rake or Rails applications.

If you are using Open<tt></tt>Laszlo with Ruby on Rails, you probably want the {OpenLaszlo Rails plugin}[laszlo-plugin.rubyforge.org] as well.

OpenLaszlo[openlaszlo.org] programs are written in XML with embedded JavaScript, and compiled into Flash (swf) binary files, or DHTML.  (As of this writing, the DHTML target is in pre-beta form.)  The APIs in this library make it easy for Ruby code to invoke the Open<tt></tt>Laszlo compiler.  For example, if hello.lzx contains the following text:
  <canvas>
    <window>
      <button>Hello, World!</button>
    </window>
  </canvas>
then the following Ruby code can be used to create a file 'hello.swf' which can be executed in a browser or placed on a web site:
  require 'rubygems'
  require 'openlaszlo'
  OpenLaszlo::compile 'hello.lzx' # creates hello.swf

You can turn this into a Rake task that will compile any Open<tt></tt>Laszlo source file:
  rule '.swf' => '.lzx' do |t|
    puts "Compiling #{t.source} => #{t.name}" if verbose
    OpenLaszlo::compile t.source, :output => t.name
  end

The following includes such a task:
  require 'openlaszlo'
  load 'tasks/openlaszlo.rake'
  # defines a pattern *.lzx -> *.swf

== Requirements

* {OpenLaszlo 3.1 or later}[openlaszlo.org]
* Ruby -v 1.8.2 or later (untested in earlier versions)
* RubyGems[rubygems.rubyforge.org]

== Installation

0:: Download and install the {OpenLaszlo SDK}[openlaszlo.org]

1: Install this gem
  > gem install ropenlaszlo

2:: Set your +OPENLASZLO_HOME+ environment variable to the directory that contains the {OpenLaszlo SDK}[openlaszlo.org].  If the following prints something, you've got it right:
  > grep Laszlo "$OPENLASZLO_HOME/README.txt"

3:: (Optional)  Set your +OPENLASZLO_URL+ environment variable to the web location of the Open<tt></tt>Laszlo server; for example, <tt>http</tt><tt>://localhost:8080/lps-3.1</tt>.  If you omit this step, the module will use the command line compiler, which is slower but is not limited to compiling files inside of +OPENLASZLO_HOME+.

<b>Note:</b> The command-line compiler is broken in the Windows version of Open<tt></tt>Laszlo 3.1.1.  If you are running Windows, step (3) is required.  ({OpenLaszlo bug 1428}[http://www.openlaszlo.org/jira/browse/LPP-1428])

== Additional Resources

* The {OpenLaszlo web site}[openlaszlo.org] is a rich source of information about the Open<tt></tt>Laszlo platform.  It includes links to the wiki, mailing lists, and forums.

* The {Laszlo on Rails}[groups.google.com/group/laszlo-on-rails] news group discusses the integration of Open<tt></tt>Laszlo with Ruby on Rails.

* The {OpenLaszlo Rails plugin}[laszlo-plugin.rubyforge.org] provides generators and scaffolding for using Open<tt></tt>Laszlo with Ruby on Rails.

* {This OpenLaszlo Blog entry}[weblog.openlaszlo.org/archives/2006/01/deploying-openlaszlo-applications-with-rake/] has additional information and some examples of using ROpenLaszlo in a Rakefile.

* The RubyForge project page is here[http://rubyforge.org/projects/ropenlaszlo/].


== Author

Oliver Steele
steele@osteele.com


== License

ROpenLaszlo is copyright (c) 2006 Oliver Steele.  It is open-source software, and may be redistributed
under the terms of the MIT license. The text of this licence is included in the
ROpenLaszlo distribution, under the +doc+ subdirectory.
